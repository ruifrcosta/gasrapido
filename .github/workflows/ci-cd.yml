name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Build and test job
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run unit tests
      run: npm run test
      
    - name: Build applications
      run: npm run build

  # Docker build and push job
  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push web image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        target: web-production
        push: true
        tags: gasrapido/web:latest,gasrapido/web:${{ github.sha }}
        
    - name: Build and push mobile image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        target: mobile-production
        push: true
        tags: gasrapido/mobile:latest,gasrapido/mobile:${{ github.sha }}

  # Deploy to Kubernetes job
  deploy-k8s:
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
        
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'
        
    - name: Configure Kubernetes context
      run: |
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > kubeconfig
        export KUBECONFIG=kubeconfig
        
    - name: Deploy with Helm
      run: |
        helm upgrade --install gasrapido ./helm/gasrapido \
          --namespace gasrapido \
          --create-namespace \
          --set image.tag=${{ github.sha }} \
          --set secrets.supabaseUrl=${{ secrets.SUPABASE_URL }} \
          --set secrets.supabaseAnonKey=${{ secrets.SUPABASE_ANON_KEY }} \
          --set secrets.supabaseServiceRoleKey=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }} \
          --set secrets.dbPassword=${{ secrets.DB_PASSWORD }} \
          --set secrets.jwtSecret=${{ secrets.JWT_SECRET }}

  # Security scanning job
  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test
        
    - name: Run OWASP ZAP scan
      uses: zaproxy/action-full-scan@v0.5.0
      with:
        target: 'http://localhost:3000'

  # Performance testing job
  performance-test:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Run performance tests
      run: |
        # Placeholder for performance testing
        echo "Running performance tests..."
        # Add actual performance testing commands here